Language: Cpp
BasedOnStyle: LLVM
Standard: Latest
AccessModifierOffset: -4
AlignAfterOpenBracket: BlockIndent
AlignConsecutiveAssignments:
  Enabled: true
  AcrossEmptyLines: true
  AcrossComments: true
  AlignFunctionPointers: true
AlignConsecutiveBitFields:
  Enabled: true
  AcrossEmptyLines: true
  AcrossComments: true
AlignConsecutiveDeclarations: false
AlignConsecutiveShortCaseStatements:
  Enabled: true
  AcrossEmptyLines: true
  AcrossComments: true
  AlignCaseColons: true
AlignOperands: true
AllowShortCaseExpressionOnASingleLine: true
AllowShortCaseLabelsOnASingleLine: true
AllowShortCompoundRequirementOnASingleLine: true
AllowShortIfStatementsOnASingleLine: WithoutElse
AllowShortLambdasOnASingleLine: Empty
AlignTrailingComments: true
AllowShortBlocksOnASingleLine: false
AllowShortFunctionsOnASingleLine: None
AlwaysBreakTemplateDeclarations: Yes
BinPackArguments: false
# BinPackLongBracedList: false ## Not recognized
BinPackParameters: OnePerLine
BitFieldColonSpacing: After
BreakBeforeBraces: Custom
BraceWrapping:
  AfterCaseLabel: false
  AfterClass: false
  AfterControlStatement: false
  AfterEnum: false
  AfterFunction: false
  AfterNamespace: false
  AfterStruct: false
  AfterUnion: false
  AfterExternBlock: false
  BeforeCatch: false
  BeforeElse: false
  BeforeLambdaBody: false
  BeforeWhile: false
  SplitEmptyFunction: false
  SplitEmptyRecord: false
  SplitEmptyNamespace: false
BracedInitializerIndentWidth: 2
BreakAdjacentStringLiterals: true
BreakAfterAttributes: Always
BreakAfterReturnType: ExceptShortType
BreakArrays: true
BreakBeforeBinaryOperators: NonAssignment
BreakConstructorInitializersBeforeComma: true
BreakBeforeConceptDeclarations: Always
BreakBeforeInlineASMColon: Always
# BreakBeforeTemplateCloser: true
BreakBeforeTernaryOperators: true
BreakBinaryOperations: RespectPrecedence
BreakConstructorInitializers: AfterColon
BreakFunctionDefinitionParameters: true
BreakInheritanceList: AfterColon
BreakStringLiterals: true
BreakTemplateDeclarations: MultiLine
ColumnLimit: 120
CommentPragmas: '^ IWYU pragma:'
CompactNamespaces: false
# ConstructorInitializerAllOnOneLineOrOnePerLine: true
ConstructorInitializerIndentWidth: 2
ContinuationIndentWidth: 4
Cpp11BracedListStyle: true
DerivePointerAlignment: false
EmptyLineAfterAccessModifier: Leave
EmptyLineBeforeAccessModifier: LogicalBlock
FixNamespaceComments: true
# ForEachMacros: []
# IfMacros: []
IncludeBlocks: Regroup
IncludeCategories:
  - Regex: '^<.*'
    Priority: 1
  - Regex: '^".*'
    Priority: 2
  - Regex: '.*'
    Priority: 3
IncludeIsMainRegex: '([-_](test|unittest))?$'
# IncludeIsMainSourceRegex: ""
IndentAccessModifiers: false
IndentCaseBlocks: true
IndentCaseLabels: true
# IndentExportBlock: true ## Not recognized
IndentExternBlock: Indent
IndentGotoLabels: true
IndentPPDirectives: AfterHash
IndentRequiresClause: true
IndentWidth: 4
IndentWrappedFunctionNames: true
InsertBraces: true # Be aware this can cause errors due to semantic knowledge required that clang can't know
InsertNewlineAtEOF: true
InsertTrailingCommas: Wrapped
IntegerLiteralSeparator:
  Binary: 0
  BinaryMinDigits: 0
  Decimal: 0
  DecimalMinDigits: 0
  Hex: 0
  HexMinDigits: 0
JavaScriptQuotes: Double
JavaScriptWrapImports: true
KeepEmptyLines:
  AtEndOfFile: false
  AtStartOfBlock: false
  AtStartOfFile: false
# KeepFormFeed: ##boolean
LambdaBodyIndentation: Signature
LineEnding: DeriveLF
MacroBlockBegin: ''
MacroBlockEnd: ''
# Macros: [""]
MainIncludeChar: Any
MaxEmptyLinesToKeep: 1
NamespaceIndentation: Inner # None | All
# NamespaceMacros: [""]
# ObjBinPackProtocolList: Never  ### for Objective-C
# ObjCBlockIndentWidth: 4
# ObjCBreakBeforeNestedBlockParam: true
# ObjCPropertyAttributeOrder: [""]
# ObjCSpaceAfterProperty: false
# ObjCSpaceBeforeProtocolList: false
PPIndentWidth: 2
PackConstructorInitializers: CurrentLine
### Penalty values ######################################################################
# PenaltyBreakAssignment: 5
# PenaltyBreakBeforeFirstCallParameter: 5
# PenaltyBreakBeforeMemberAccess: 5
# PenaltyBreakComment: 5
# PenaltyBreakFirstLessLess:
# PenaltyBreakOpenParenthesis:
# PenaltyBreakScopeResolution:
# PenaltyBreakString:
# PenaltyBreakTemplateDeclaration:
# PenaltyExcessCharacter:
# PenaltyIndentedWhitespace:
# PenaltyReturnTypeOnItsOwnLine:
PointerAlignment: Left # Right | Middle ## who tf uses middle???
QualifierAlignment: Left
# QualifierOrder: ["const", "constexpr", "inline", "static", "type", "volatile", "restrict"] ### Not recognized??
RawStringFormats:
  - Language: TextProto
    Delimiters:
      - pb
      - proto
ReferenceAlignment: Right # Left | Right | Middle
ReflowComments: false ## Apparently uses a boolean??: Never | IndentyOnly | Always
RemoveBracesLLVM: false
# RemoveEmptyLinesInUnwrappedLines: true ## Not recognized
RemoveParentheses: Leave
RemoveSemicolon: false
RequiresClausePosition: OwnLine
RequiresExpressionIndentation: OuterScope
SeparateDefinitionBlocks: Always
ShortNamespaceLines: 0
SkipMacroDefinitionBody: true
SortIncludes: CaseInsensitive
SortJavaStaticImport: Before
SortUsingDeclarations: LexicographicNumeric
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: false
SpaceAroundPointerQualifiers: Default
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeJsonColon: false
SpaceBeforeParens: ControlStatements
SpaceBeforeParensOptions: # Only if using 'Custom' for SpaceBeforeParens
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: false
# SpacesBeforeTrailingComments: 2
SpacesInAngles: Never
SpacesInContainerLiterals: false
SpacesInLineCommentPrefix:
  Minimum: 1
  Maximum: -1
SpacesInParens: Custom
SpacesInParensOptions:
  ExceptDoubleParentheses: false
  InConditionalStatements: false
  InCStyleCasts: false
  InEmptyParentheses: false
  Other: false
SpacesInParentheses: false
SpacesInSquareBrackets: false
# Standard: Latest ## c++03 | c++11 | c++14 | c++17 | c++20 | Latest | Auto ## At top of file
StatementAttributeLikeMacros:
  - Q_EMIT
StatementMacros:
  - Q_UNUSED
  - QT_REQUIRE_VERSION
TabWidth: 4
TableGenBreakInsideDAGArg: BreakAll
# TableGenBreakDAGArgOperators: [""]
# TemplateNames: [""]
# TypeNames: [""]
# TypenameMacros: [""]
UseTab: AlignWithSpaces ## Never | ForIndentation | ForContinuationAndIndentation | AlignWithSpaces | Always
# VariableTemplates: [""]
VerilogBreakBetweenInstancePorts: true
WhitespaceSensitiveMacros:
  - BOOST_PP_STRINGIZE
  - CF_SWIFT_NAME
  - NS_SWIFT_NAME
  - PP_STRINGIZE
  - STRINGIZE
# WrapNamespaceBodyWithEmptyLines: Never # Always | ## Not recognized
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
